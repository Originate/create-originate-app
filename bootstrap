#!/usr/bin/env zsh

set -euo pipefail

here=$0:A:h

function sync {
    for arg; do
        local dest=${arg#$here/template/}
        mkdir -p $(dirname "$dest")
        cp -r "$arg" "$dest"
    done
}

function main {
    [[ -f package.json ]] && echo "error: package.json already exists!" && exit 1
    # common
    sync "$here"/template/{package.json,.gitignore,.npmrc}
    sync "$here"/template/packages/tsconfig.base.json
    sync "$here"/template/packages/{lib,frontend,backend}/package.json
    sync "$here"/template/packages/{lib,frontend,backend}/tsconfig.json
    sync "$here"/template/packages/{lib,backend}/index.ts
    sync "$here"/template/packages/frontend/index.tsx
    sync "$here"/template/.github/
    # jest
    sync "$here"/template/packages/jest.base.config.js
    sync "$here"/template/packages/{lib,frontend,backend}/jest.config.js
    sync "$here"/template/packages/{lib,frontend,backend}/index.test.ts
    # linting
    sync "$here"/template/{.prettierrc,.prettierignore}
    sync "$here"/template/packages/.eslintrc.base.js
    sync "$here"/template/packages/{lib,frontend,backend}/.eslintrc.js
    # lib
    sync "$here"/template/packages/lib/src/
    # backend
    sync "$here"/template/Procfile
    sync "$here"/template/packages/backend/nodemon.json
    sync "$here"/template/packages/backend/src/
    # frontend
    sync "$here"/template/packages/frontend/webpack.{common,dev,prod}.js
    sync "$here"/template/packages/frontend/.env.example
    sync "$here"/template/packages/frontend/{src,public,modules,lib}/
    sync "$here"/template/packages/frontend/babel.config.js
    yarn
}

main
